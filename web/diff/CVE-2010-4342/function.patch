commit 4e085e76cbe558b79b54cbab772f61185879bc64
Author: David S. Miller <davem@davemloft.net>
Date:   Wed Dec 8 18:42:23 2010 -0800

    econet: Fix crash in aun_incoming().
    
    Unconditional use of skb->dev won't work here,
    try to fetch the econet device via skb_dst()->dev
    instead.
    
    Suggested by Eric Dumazet.
    
    Reported-by: Nelson Elhage <nelhage@ksplice.com>
    Tested-by: Nelson Elhage <nelhage@ksplice.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>

diff --git a/net/econet/af_econet.c b/net/econet/af_econet.c
index f180371..15dcc1a 100644
--- a/net/econet/af_econet.c
+++ b/net/econet/af_econet.c
@@ -850,37 +850,41 @@ static void aun_send_response(__u32 addr, unsigned long seq, int code, int cb)
 static void aun_incoming(struct sk_buff *skb, struct aunhdr *ah, size_t len)
 {
 	struct iphdr *ip = ip_hdr(skb);
 	unsigned char stn = ntohl(ip->saddr) & 0xff;
+	struct dst_entry *dst = skb_dst(skb);
+	struct ec_device *edev = NULL;
 	struct sock *sk = NULL;
 	struct sk_buff *newskb;
-	struct ec_device *edev = skb->dev->ec_ptr;
+
+	if (dst)
+		edev = dst->dev->ec_ptr;
 
 	if (! edev)
 		goto bad;
 
 	if ((sk = ec_listening_socket(ah->port, stn, edev->net)) == NULL)
 		goto bad;		/* Nobody wants it */
 
 	newskb = alloc_skb((len - sizeof(struct aunhdr) + 15) & ~15,
 			   GFP_ATOMIC);
 	if (newskb == NULL)
 	{
 		printk(KERN_DEBUG "AUN: memory squeeze, dropping packet.\n");
 		/* Send nack and hope sender tries again */
 		goto bad;
 	}
 
 	memcpy(skb_put(newskb, len - sizeof(struct aunhdr)), (void *)(ah+1),
 	       len - sizeof(struct aunhdr));
 
 	if (ec_queue_packet(sk, newskb, stn, edev->net, ah->cb, ah->port))
 	{
 		/* Socket is bankrupt. */
 		kfree_skb(newskb);
 		goto bad;
 	}
 
 	aun_send_response(ip->saddr, ah->handle, 3, 0);
 	sock_put(sk);
 	return;
 
