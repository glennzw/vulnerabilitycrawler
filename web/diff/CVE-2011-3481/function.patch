commit 6e776956a1a9dfa58eacdd0ddd52644009eac9e5
Author: Bron Gondwana <brong@opera.com>
Date:   Fri Aug 12 15:49:25 2011 +0200

    Bug #2772/3463 - fold references header

diff --git a/imap/index.c b/imap/index.c
index 6af5775..74afc21 100644
--- a/imap/index.c
+++ b/imap/index.c
@@ -175,6 +175,7 @@ static struct seqset *_index_vanished(struct index_state *state,
 				      struct vanished_params *params);
 static struct seqset *_parse_sequence(struct index_state *state,
 				      const char *sequence, int usinguid);
+static void massage_header(char *hdr);
 
 /* NOTE: Make sure these are listed in CAPABILITY_STRING */
 static const struct thread_algorithm thread_algs[] = {
@@ -3932,61 +3933,62 @@ static char *find_msgid(char *str, char **rem)
 void index_get_ids(MsgData *msgdata, char *envtokens[], const char *headers,
 		   unsigned size)
 {
     static char *buf;
     static unsigned bufsize;
     static struct strlist refhdr;
     char *refstr, *ref, *in_reply_to;
     int refsize = REFGROWSIZE;
 
     if (bufsize < size+2) {
 	bufsize = size+100;
 	buf = xrealloc(buf, bufsize);
     }
 
     /* get msgid */
     msgdata->msgid = find_msgid(envtokens[ENV_MSGID], NULL);
      /* if we don't have one, create one */
     if (!msgdata->msgid) {
 	snprintf(buf, bufsize, "<Empty-ID: %u>", msgdata->msgno);
 	msgdata->msgid = xstrdup(buf);
     }
 
     /* Copy headers to the buffer */
     memcpy(buf, headers, size);
     buf[size] = '\0';
 
     /* grab the References header */
     refhdr.s = "references";
     index_pruneheader(buf, &refhdr, 0);
     if (*buf) {
 	/* allocate some space for refs */
 	msgdata->ref = (char **) xmalloc(refsize * sizeof(char *));
 	/* find references */
+	massage_header(buf);
 	refstr = buf;
 	while ((ref = find_msgid(refstr, &refstr)) != NULL) {
 	    /* reallocate space for this msgid if necessary */
 	    if (msgdata->nref == refsize) {
 		refsize += REFGROWSIZE;
 		msgdata->ref = (char **)
 		    xrealloc(msgdata->ref, refsize * sizeof(char *));
 	    }
 	    /* store this msgid in the array */
 	    msgdata->ref[msgdata->nref++] = ref;
 	}
     }
 
     /* if we have no references, try in-reply-to */
     if (!msgdata->nref) {
 	/* get in-reply-to id */
 	in_reply_to = find_msgid(envtokens[ENV_INREPLYTO], NULL);
 	/* if we have an in-reply-to id, make it the ref */
 	if (in_reply_to) {
 	    msgdata->ref = (char **) xmalloc(sizeof(char *));
 	    msgdata->ref[msgdata->nref++] = in_reply_to;
 	}
     }
 }
 
 /*
  * Getnext function for sorting message lists.
  */
