   Implemented "[ #315668 ] Disable loading of external entities in XML parsing by default".
import org.xml.sax.SAXException;
import org.xml.sax.SAXNotRecognizedException;

import javax.xml.parsers.ParserConfigurationException;
import javax.xml.parsers.SAXParser;
import javax.xml.parsers.SAXParserFactory;
import java.util.Collection;
import java.util.Collections;
import java.util.Hashtable;
import java.util.Map;

/**
 * Boasts a couple of improvements over the 'stock' xerces parser factory.
    static {
        {
            final OrbeonParserConfiguration configuration = XercesSAXParser.makeConfig(false, true);
            final Collection features = configuration.getRecognizedFeatures();
            recognizedFeaturesNonValidatingXInclude = Collections.unmodifiableCollection(features);
            defaultFeaturesNonValidatingXInclude = configuration.getFeatures();
            // This was being done in XMLUtils.createSaxParserFactory before.  Maybe want to
            // move it back if we decide to make this class more general purpose.
            defaultFeaturesNonValidatingXInclude.put("http://xml.org/sax/features/namespaces", Boolean.TRUE);
            defaultFeaturesNonValidatingXInclude.put("http://xml.org/sax/features/namespace-prefixes", Boolean.FALSE);
        }
        {
            final OrbeonParserConfiguration configuration = XercesSAXParser.makeConfig(false, false);
            final Collection features = configuration.getRecognizedFeatures();
            recognizedFeaturesNonValidatingNoXInclude = Collections.unmodifiableCollection(features);
            defaultFeaturesNonValidatingNoXInclude = configuration.getFeatures();
            // This was being done in XMLUtils.createSaxParserFactory before.  Maybe want to
            // move it back if we decide to make this class more general purpose.
            defaultFeaturesNonValidatingNoXInclude.put("http://xml.org/sax/features/namespaces", Boolean.TRUE);
            defaultFeaturesNonValidatingNoXInclude.put("http://xml.org/sax/features/namespace-prefixes", Boolean.FALSE);
        }

        {
            final Collection features = configuration.getRecognizedFeatures();
            recognizedFeaturesValidatingXInclude = Collections.unmodifiableCollection(features);
            defaultFeaturesValidatingXInclude = configuration.getFeatures();
            // This was being done in XMLUtils.createSaxParserFactory before.  Maybe want to
            // move it back if we decide to make this class more general purpose.
            defaultFeaturesValidatingXInclude.put("http://xml.org/sax/features/namespaces", Boolean.TRUE);
            defaultFeaturesValidatingXInclude.put("http://xml.org/sax/features/namespace-prefixes", Boolean.FALSE);
        }
        {
            final OrbeonParserConfiguration configuration = XercesSAXParser.makeConfig(true, false);
            final Collection features = configuration.getRecognizedFeatures();
            recognizedFeaturesValidatingNoXInclude = Collections.unmodifiableCollection(features);
            defaultFeaturesValidatingNoXInclude = configuration.getFeatures();
            // This was being done in XMLUtils.createSaxParserFactory before.  Maybe want to
            // move it back if we decide to make this class more general purpose.
            defaultFeaturesValidatingNoXInclude.put("http://xml.org/sax/features/namespaces", Boolean.TRUE);
            defaultFeaturesValidatingNoXInclude.put("http://xml.org/sax/features/namespace-prefixes", Boolean.FALSE);
        }
    }

    private final Hashtable features;
    private final boolean validating;
    private final boolean handleXInclude;
        features.put(key, val ? Boolean.TRUE : Boolean.FALSE);
    }

    public SAXParser newSAXParser() throws ParserConfigurationException {
        final SAXParser ret;
        try {
            ret = new XercesJAXPSAXParser(this, features, validating, handleXInclude);
        } catch (final SAXException se) {
            // Translate to ParserConfigurationException
            throw new OXFException(se); // so we see a decent stack trace!
//            throw new ParserConfigurationException(se.getMessage());
        }
        return ret;
    }
