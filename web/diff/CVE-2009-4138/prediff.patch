   firewire: ohci: handle receive packets with a data length of zero
   
   Queueing to receive an ISO packet with a payload length of zero
   silently does nothing in dualbuffer mode, and crashes the kernel in
   packet-per-buffer mode.  Return an error in dualbuffer mode, because
   the DMA controller won't let us do what we want, and work correctly in
   packet-per-buffer mode.
   
   Signed-off-by: Jay Fenlason <fenlason@redhat.com>
   Signed-off-by: Stefan Richter <stefanr@s5r6.in-berlin.de>
   Cc: stable@kernel.org
	page     = payload >> PAGE_SHIFT;
	offset   = payload & ~PAGE_MASK;
	rest     = p->payload_length;

	/* FIXME: make packet-per-buffer/dual-buffer a context option */
	while (rest > 0) {
					unsigned long payload)
{
	struct iso_context *ctx = container_of(base, struct iso_context, base);
	struct descriptor *d = NULL, *pd = NULL;
	struct fw_iso_packet *p = packet;
	dma_addr_t d_bus, page_bus;
	u32 z, header_z, rest;
		d->data_address = cpu_to_le32(d_bus + (z * sizeof(*d)));

		rest = payload_per_buffer;
		for (j = 1; j < z; j++) {
			pd = d + j;
			pd->control = cpu_to_le16(DESCRIPTOR_STATUS |
						  DESCRIPTOR_INPUT_MORE);

