commit 1bce40644cddee93b4b1877a94a6ce345f32852c
Author: RÃ©mi Denis-Courmont <remi@remlab.net>
Date:   Sun Jul 10 23:36:31 2011 +0300

    real: fix heap buffer overflow (CVE-2011-2587)

diff --git a/modules/demux/real.c b/modules/demux/real.c
index a295f2b..40ff254 100644
--- a/modules/demux/real.c
+++ b/modules/demux/real.c
@@ -838,34 +838,34 @@ static void SiprPacketReorder(uint8_t *buf, int sub_packet_h, int framesize)
 static void DemuxAudioSipr( demux_t *p_demux, real_track_t *tk, mtime_t i_pts )
 {
     demux_sys_t *p_sys = p_demux->p_sys;
     block_t *p_block = tk->p_sipr_packet;
 
-    if( p_sys->i_buffer < tk->i_frame_size )
+    if( p_sys->i_buffer < tk->i_frame_size
+     || tk->i_sipr_subpacket_count >= tk->i_subpacket_h )
         return;
 
     if( !p_block )
     {
         p_block = block_New( p_demux, tk->i_frame_size * tk->i_subpacket_h );
         if( !p_block )
             return;
         tk->p_sipr_packet = p_block;
     }
-
     memcpy( p_block->p_buffer + tk->i_sipr_subpacket_count * tk->i_frame_size,
             p_sys->buffer, tk->i_frame_size );
     if (!tk->i_sipr_subpacket_count)
     {
         p_block->i_dts =
         p_block->i_pts = i_pts;
     }
 
     if( ++tk->i_sipr_subpacket_count < tk->i_subpacket_h )
         return;
 
     SiprPacketReorder(p_block->p_buffer, tk->i_subpacket_h, tk->i_frame_size);
     CheckPcr( p_demux, tk, p_block->i_pts );
     es_out_Send( p_demux->out, tk->p_es, p_block );
     tk->i_sipr_subpacket_count = 0;
     tk->p_sipr_packet = NULL;
 }
 
