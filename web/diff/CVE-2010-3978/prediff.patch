   SECURITY FIX: Do not allow GET access to JSON views without including CSRF token.
   
   See http://haacked.com/archive/2009/06/25/json-hijacking.aspx
    #@users = User.find_with_deleted(:all, :order => 'updated_at desc')
#  going to list today's orders, yesterday's orders, older orders
# have a filter / search at the top
    # @orders, @ 
  end

end
class Admin::ProductsController < Admin::BaseController
  resource_controller
  before_filter :load_data, :except => :index

  index.response do |wants|
class Admin::UsersController < Admin::BaseController
  resource_controller
  before_filter :load_roles, :only => [:edit, :new, :update, :create]

  create.after :save_user_roles
    wants.html { render :action => :index }
    wants.json { render :json => @collection.to_json(:include => {:bill_address => {:include => [:state, :country]}, :ship_address => {:include => [:state, :country]}}) }
  end
  
  destroy.success.wants.js { render_js_for_destroy }

  private

  protected

  def default_title
    Spree::Config[:site_name]
  end
  
  def accurate_title
    return nil
  end
  
  def reject_unknown_object
    # workaround to catch problems with loading errors for permalink ids (reconsider RC permalink hack elsewhere?)
    begin
# this clas was inspired (heavily) from the mephisto admin architecture

class Admin::OverviewController < Admin::BaseController
  #todo, add rss feed of information that is happening

  def index
        ["completed_at >= ?", params[:from]]
      end
  end
  
  def fill_empty_entries(orders, params)
    from_date = params[:from].to_date
    to_date = (params[:to] || Time.now).to_date
	
		jQuery.ajax({
	       type: 'GET',
	       url: 'admin/overview/get_report_data',
	       data: ({report: 'orders_by_day', name: report, value: value, authenticity_token: AUTH_TOKEN}),
	       success: handle_orders_by_day
		});
		
		jQuery.ajax({
	       type: 'GET',
	       url: 'admin/overview/get_report_data',
	       data: ({report: 'orders_totals', name: report, authenticity_token: AUTH_TOKEN}),
	       success: handle_orders_total
		});

<%= javascript_include_tag('jquery.template') unless controller.controller_name == "overview" %>
<%= javascript_include_tag 'spree', 'nested-attribute', 'zone', 'calculator', 'gateway' %>
<%= javascript_tag "$ = jQuery;" %>
<%= javascript_tag "var AUTH_TOKEN = #{form_authenticity_token.inspect};" if protect_against_forgery? %>
<%= javascript_include_tag 'jquery.alerts/jquery.alerts.js' %>
<%= javascript_include_tag 'jquery.autocomplete.min.js' %>

<%= stylesheet_link_tag 'jquery.autocomplete.css' %>

<%= javascript_tag "jQuery.alerts.dialogClass = 'spree';" %>
<%= unobtrusive_datepicker_includes %>	
<%= yield :head %>
    });
  }

  $("#customer_search").autocomplete("/admin/users.json", {
    minChars: 5,
    delay: 1500,
    parse: prep_autocomplete_data,
    });
  }

  $("#add_product_name").autocomplete("/admin/products.json", {
      parse: prep_autocomplete_data,
      formatItem: function(item) {
        return format_autocomplete(item);
