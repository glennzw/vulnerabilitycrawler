commit 28e9fc592cb8c7a43e4d3147b38be6032a0e81bc
Author: Jiri Slaby <jirislaby@gmail.com>
Date:   Sun Aug 23 22:55:51 2009 -0700

    NET: llc, zero sockaddr_llc struct
    
    sllc_arphrd member of sockaddr_llc might not be changed. Zero sllc
    before copying to the above layer's structure.
    
    Signed-off-by: Jiri Slaby <jirislaby@gmail.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>

diff --git a/net/llc/af_llc.c b/net/llc/af_llc.c
index 9208cf5..c45eee1 100644
--- a/net/llc/af_llc.c
+++ b/net/llc/af_llc.c
@@ -909,36 +909,37 @@ release:
 static int llc_ui_getname(struct socket *sock, struct sockaddr *uaddr,
 			  int *uaddrlen, int peer)
 {
 	struct sockaddr_llc sllc;
 	struct sock *sk = sock->sk;
 	struct llc_sock *llc = llc_sk(sk);
 	int rc = 0;
 
+	memset(&sllc, 0, sizeof(sllc));
 	lock_sock(sk);
 	if (sock_flag(sk, SOCK_ZAPPED))
 		goto out;
 	*uaddrlen = sizeof(sllc);
 	memset(uaddr, 0, *uaddrlen);
 	if (peer) {
 		rc = -ENOTCONN;
 		if (sk->sk_state != TCP_ESTABLISHED)
 			goto out;
 		if(llc->dev)
 			sllc.sllc_arphrd = llc->dev->type;
 		sllc.sllc_sap = llc->daddr.lsap;
 		memcpy(&sllc.sllc_mac, &llc->daddr.mac, IFHWADDRLEN);
 	} else {
 		rc = -EINVAL;
 		if (!llc->sap)
 			goto out;
 		sllc.sllc_sap = llc->sap->laddr.lsap;
 
 		if (llc->dev) {
 			sllc.sllc_arphrd = llc->dev->type;
 			memcpy(&sllc.sllc_mac, llc->dev->dev_addr,
 			       IFHWADDRLEN);
 		}
 	}
 	rc = 0;
 	sllc.sllc_family = AF_LLC;
 	memcpy(uaddr, &sllc, sizeof(sllc));
