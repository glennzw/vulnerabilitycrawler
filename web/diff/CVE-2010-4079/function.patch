commit 405707985594169cfd0b1d97d29fcb4b4c6f2ac9
Author: Dan Rosenberg <drosenberg@vsecurity.com>
Date:   Wed Sep 15 18:44:22 2010 -0300

    V4L/DVB: ivtvfb: prevent reading uninitialized stack memory
    
    The FBIOGET_VBLANK device ioctl allows unprivileged users to read 16
    bytes of uninitialized stack memory, because the "reserved" member of
    the fb_vblank struct declared on the stack is not altered or zeroed
    before being copied back to the user.  This patch takes care of it.
    
    Signed-off-by: Dan Rosenberg <dan.j.rosenberg@gmail.com>
    Signed-off-by: Andy Walls <awalls@md.metrocast.net>
    Signed-off-by: Mauro Carvalho Chehab <mchehab@redhat.com>

diff --git a/drivers/media/video/ivtv/ivtvfb.c b/drivers/media/video/ivtv/ivtvfb.c
index be03a71..f0316d0 100644
--- a/drivers/media/video/ivtv/ivtvfb.c
+++ b/drivers/media/video/ivtv/ivtvfb.c
@@ -458,54 +458,56 @@ static ssize_t ivtvfb_write(struct fb_info *info, const char __user *buf,
 static int ivtvfb_ioctl(struct fb_info *info, unsigned int cmd, unsigned long arg)
 {
 	DEFINE_WAIT(wait);
 	struct ivtv *itv = (struct ivtv *)info->par;
 	int rc = 0;
 
 	switch (cmd) {
 		case FBIOGET_VBLANK: {
 			struct fb_vblank vblank;
 			u32 trace;
 
+			memset(&vblank, 0, sizeof(struct fb_vblank));
+
 			vblank.flags = FB_VBLANK_HAVE_COUNT |FB_VBLANK_HAVE_VCOUNT |
 					FB_VBLANK_HAVE_VSYNC;
 			trace = read_reg(IVTV_REG_DEC_LINE_FIELD) >> 16;
 			if (itv->is_50hz && trace > 312)
 				trace -= 312;
 			else if (itv->is_60hz && trace > 262)
 				trace -= 262;
 			if (trace == 1)
 				vblank.flags |= FB_VBLANK_VSYNCING;
 			vblank.count = itv->last_vsync_field;
 			vblank.vcount = trace;
 			vblank.hcount = 0;
 			if (copy_to_user((void __user *)arg, &vblank, sizeof(vblank)))
 				return -EFAULT;
 			return 0;
 		}
 
 		case FBIO_WAITFORVSYNC:
 			prepare_to_wait(&itv->vsync_waitq, &wait, TASK_INTERRUPTIBLE);
 			if (!schedule_timeout(msecs_to_jiffies(50)))
 				rc = -ETIMEDOUT;
 			finish_wait(&itv->vsync_waitq, &wait);
 			return rc;
 
 		case IVTVFB_IOC_DMA_FRAME: {
 			struct ivtvfb_dma_frame args;
 
 			IVTVFB_DEBUG_INFO("IVTVFB_IOC_DMA_FRAME\n");
 			if (copy_from_user(&args, (void __user *)arg, sizeof(args)))
 				return -EFAULT;
 
 			return ivtvfb_prep_frame(itv, cmd, args.source, args.dest_offset, args.count);
 		}
 
 		default:
 			IVTVFB_DEBUG_INFO("Unknown ioctl %08x\n", cmd);
 			return -EINVAL;
 	}
 	return 0;
 }
 
 /* Framebuffer device handling */
 
