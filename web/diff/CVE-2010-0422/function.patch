commit f93a22c175090cf02e80bc3ee676b53f1251f685
Author: Ray Strode <rstrode@redhat.com>
Date:   Fri Feb 12 14:13:38 2010 -0500

    Nullify grab window variables when windows are destroyed
    
    If we don't do this then there is a time period where the
    grab window variables contain dangling pointers which can
    cause crashes.
    
    Part of fix for
    https://bugzilla.gnome.org/show_bug.cgi?id=609789

diff --git a/src/gs-grab-x11.c b/src/gs-grab-x11.c
index 704c3f2..40a3879 100644
--- a/src/gs-grab-x11.c
+++ b/src/gs-grab-x11.c
@@ -162,22 +162,30 @@ static int
 gs_grab_get_keyboard (GSGrab    *grab,
                       GdkWindow *window,
                       GdkScreen *screen)
 {
         GdkGrabStatus status;
 
         g_return_val_if_fail (window != NULL, FALSE);
         g_return_val_if_fail (screen != NULL, FALSE);
 
         gs_debug ("Grabbing keyboard widget=%X", (guint32) GDK_WINDOW_XID (window));
         status = gdk_keyboard_grab (window, FALSE, GDK_CURRENT_TIME);
 
         if (status == GDK_GRAB_SUCCESS) {
+                if (grab->priv->keyboard_grab_window != NULL) {
+                        g_object_remove_weak_pointer (G_OBJECT (grab->priv->keyboard_grab_window),
+                                                      (gpointer *) &grab->priv->keyboard_grab_window);
+                }
                 grab->priv->keyboard_grab_window = window;
+
+                g_object_add_weak_pointer (G_OBJECT (grab->priv->keyboard_grab_window),
+                                           (gpointer *) &grab->priv->keyboard_grab_window);
+
                 grab->priv->keyboard_grab_screen = screen;
         } else {
                 gs_debug ("Couldn't grab keyboard!  (%s)", grab_string (status));
         }
 
         return status;
 }
 
@@ -185,29 +193,37 @@ static int
 gs_grab_get_mouse (GSGrab    *grab,
                    GdkWindow *window,
                    GdkScreen *screen,
                    gboolean   hide_cursor)
 {
         GdkGrabStatus status;
         GdkCursor    *cursor;
 
         g_return_val_if_fail (window != NULL, FALSE);
         g_return_val_if_fail (screen != NULL, FALSE);
 
         cursor = get_cursor ();
 
         gs_debug ("Grabbing mouse widget=%X", (guint32) GDK_WINDOW_XID (window));
         status = gdk_pointer_grab (window, TRUE, 0, NULL,
                                    (hide_cursor ? cursor : NULL),
                                    GDK_CURRENT_TIME);
 
         if (status == GDK_GRAB_SUCCESS) {
+                if (grab->priv->mouse_grab_window != NULL) {
+                        g_object_remove_weak_pointer (G_OBJECT (grab->priv->mouse_grab_window),
+                                                      (gpointer *) &grab->priv->mouse_grab_window);
+                }
                 grab->priv->mouse_grab_window = window;
+
+                g_object_add_weak_pointer (G_OBJECT (grab->priv->mouse_grab_window),
+                                           (gpointer *) &grab->priv->mouse_grab_window);
+
                 grab->priv->mouse_grab_screen = screen;
                 grab->priv->mouse_hide_cursor = hide_cursor;
         }
 
         gdk_cursor_unref (cursor);
 
         return status;
 }
 
@@ -214,7 +230,11 @@ gs_grab_get_mouse (GSGrab    *grab,
 void
 gs_grab_keyboard_reset (GSGrab *grab)
 {
+        if (grab->priv->keyboard_grab_window != NULL) {
+                g_object_remove_weak_pointer (G_OBJECT (grab->priv->keyboard_grab_window),
+                                              (gpointer *) &grab->priv->keyboard_grab_window);
+        }
         grab->priv->keyboard_grab_window = NULL;
         grab->priv->keyboard_grab_screen = NULL;
 }
 
@@ -232,7 +252,12 @@ gs_grab_release_keyboard (GSGrab *grab)
 void
 gs_grab_mouse_reset (GSGrab *grab)
 {
+        if (grab->priv->mouse_grab_window != NULL) {
+                g_object_remove_weak_pointer (G_OBJECT (grab->priv->mouse_grab_window),
+                                              (gpointer *) &grab->priv->mouse_grab_window);
+        }
+
         grab->priv->mouse_grab_window = NULL;
         grab->priv->mouse_grab_screen = NULL;
 }
 
