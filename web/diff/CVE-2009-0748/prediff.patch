   ext4: Add sanity checks for the superblock before mounting the filesystem
   
   This avoids insane superblock configurations that could lead to kernel
   oops due to null pointer derefences.
   
   http://bugzilla.kernel.org/show_bug.cgi?id=12371
   
   Thanks to David Maciejak at Fortinet's FortiGuard Global Security
   Research Team who discovered this bug independently (but at
   approximately the same time) as Thiemo Nagel, who submitted the patch.
   
   Signed-off-by: Thiemo Nagel <thiemo.nagel@ph.tum.de>
   Signed-off-by: "Theodore Ts'o" <tytso@mit.edu>
   Cc: stable@kernel.org
	const char *descr;
	int ret = -EINVAL;
	int blocksize;
	int db_count;
	int i;
	int needs_recovery, has_huge_files;
	int features;
	__u64 blocks_count;
	if (EXT4_BLOCKS_PER_GROUP(sb) == 0)
		goto cantfind_ext4;

	/* ensure blocks_count calculation below doesn't sign-extend */
	if (ext4_blocks_count(es) + EXT4_BLOCKS_PER_GROUP(sb) <
	    le32_to_cpu(es->s_first_data_block) + 1) {
		printk(KERN_WARNING "EXT4-fs: bad geometry: block count %llu, "
		       "first data block %u, blocks per group %lu\n",
			ext4_blocks_count(es),
			le32_to_cpu(es->s_first_data_block),
			EXT4_BLOCKS_PER_GROUP(sb));
		goto failed_mount;
	}
	blocks_count = (ext4_blocks_count(es) -
			le32_to_cpu(es->s_first_data_block) +
			EXT4_BLOCKS_PER_GROUP(sb) - 1);
	do_div(blocks_count, EXT4_BLOCKS_PER_GROUP(sb));
	sbi->s_groups_count = blocks_count;
	db_count = (sbi->s_groups_count + EXT4_DESC_PER_BLOCK(sb) - 1) /
		   EXT4_DESC_PER_BLOCK(sb);
