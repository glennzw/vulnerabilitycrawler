   Fix: [Bug #232] Multiple Cross-Site-Scripting vulnerabilities
	}

	// Login
	$login = (!empty($lastuser)?$lastuser:(GETPOST("username")?GETPOST("username"):$demologin));
	$password = $demopassword;

	// Show logo (search in order: small company logo, large company logo, theme logo, common logo)
	$sql_inj += preg_match('/(\.\.%2f)+/i', $val);
	// For XSS Injection done by adding javascript with script
	$sql_inj += preg_match('/<script/i', $val);
	if ($get) $sql_inj += preg_match('/javascript:/i', $val);
	// For XSS Injection done by adding javascript with onmousemove, etc... (closing a src or href tag with not cleaned param)
	if ($get) $sql_inj += preg_match('/"/i', $val);	// We refused " in GET parameters value
        }

		// Verification security graphic code
		if (isset($_POST["username"]) && ! empty($conf->global->MAIN_SECURITY_ENABLECAPTCHA))
		{
			require_once DOL_DOCUMENT_ROOT.'/includes/artichow/Artichow.cfg.php';
			require_once ARTICHOW."/AntiSpam.class.php";
				$langs->load('main');
				$langs->load('other');

				$user->trigger_mesg='ErrorBadValueForCode - login='.$_POST["username"];
				$_SESSION["dol_loginmesg"]=$langs->trans("ErrorBadValueForCode");
				$test=false;

		// If error, we will put error message in session under the name dol_loginmesg
		$goontestloop=false;
		if (isset($_SERVER["REMOTE_USER"]) && in_array('http',$authmode)) $goontestloop=true;
		if (isset($_POST["username"]) || GETPOST('openid_mode','alpha',1)) $goontestloop=true;

		if ($test && $goontestloop)
		{
					if ($result)
					{
						// Call function to check user/password
						$usertotest=$_POST["username"];
						$passwordtotest=$_POST["password"];
						$entitytotest=$_POST["entity"];
						$function='check_user_password_'.$mode;
				$langs->load('other');

				// Bad password. No authmode has found a good password.
				$user->trigger_mesg=$langs->trans("ErrorBadLoginPassword").' - login='.$_POST["username"];
				$_SESSION["dol_loginmesg"]=$langs->trans("ErrorBadLoginPassword");

				// Appel des triggers
