commit 762f98ab4137749d0993612b4e3544a4207e78a1
Author: Regis Houssin <regis@dolibarr.fr>
Date:   Tue Nov 8 17:17:21 2011 +0100

    Fix: [Bug #232] Multiple Cross-Site-Scripting vulnerabilities

diff --git a/htdocs/lib/security.lib.php b/htdocs/lib/security.lib.php
index 4212cc1..0a8ceaf 100644
--- a/htdocs/lib/security.lib.php
+++ b/htdocs/lib/security.lib.php
@@ -89,186 +89,186 @@ function getLoginMethod()
 function dol_loginfunction($langs,$conf,$mysoc)
 {
 	global $dolibarr_main_demo,$db;
 	global $smartphone;
 
 	$langcode=(GETPOST('lang')?((is_object($langs)&&$langs->defaultlang)?$langs->defaultlang:'auto'):GETPOST('lang'));
 	$langs->setDefaultLang($langcode);
 
 	$langs->load("main");
 	$langs->load("other");
 	$langs->load("help");
 	$langs->load("admin");
 
 	$main_authentication=$conf->file->main_authentication;
 	$session_name=session_name();
 
 	$dol_url_root = DOL_URL_ROOT;
 
 	$php_self = $_SERVER['PHP_SELF'];
 	$php_self.= $_SERVER["QUERY_STRING"]?'?'.$_SERVER["QUERY_STRING"]:'';
 
 	// Title
 	$title='Dolibarr '.DOL_VERSION;
 	if (! empty($conf->global->MAIN_APPLICATION_TITLE)) $title=$conf->global->MAIN_APPLICATION_TITLE;
 
 	// Select templates
 	if (preg_match('/^smartphone/',$conf->smart_menu) && isset($conf->browser->phone))
 	{
 		$template_dir = DOL_DOCUMENT_ROOT.'/theme/phones/smartphone/tpl/';
 	}
 	else
 	{
 		if (file_exists(DOL_DOCUMENT_ROOT."/theme/".$conf->theme."/tpl/login.tpl.php"))
 		{
 			$template_dir = DOL_DOCUMENT_ROOT."/theme/".$conf->theme."/tpl/";
 		}
 		else
 		{
 			$template_dir = DOL_DOCUMENT_ROOT."/core/tpl/";
 		}
 	}
 
 	$conf->css = "/theme/".$conf->theme."/style.css.php?lang=".$langs->defaultlang;
 	$conf_css = DOL_URL_ROOT.$conf->css;
 
 	// Set cookie for timeout management
 	$prefix=dol_getprefix();
 	$sessiontimeout='DOLSESSTIMEOUT_'.$prefix;
 	if (! empty($conf->global->MAIN_SESSION_TIMEOUT)) setcookie($sessiontimeout, $conf->global->MAIN_SESSION_TIMEOUT, 0, "/", '', 0);
 
 	if (GETPOST("urlfrom")) $_SESSION["urlfrom"]=GETPOST("urlfrom");
 	else unset($_SESSION["urlfrom"]);
 
 	if (! GETPOST("username")) $focus_element='username';
 	else $focus_element='password';
 
 	$login_background=DOL_URL_ROOT.'/theme/login_background.png';
 	if (file_exists(DOL_DOCUMENT_ROOT.'/theme/'.$conf->theme.'/img/login_background.png'))
 	{
 		$login_background=DOL_URL_ROOT.'/theme/'.$conf->theme.'/img/login_background.png';
 	}
 
 	$demologin='';
 	$demopassword='';
 	if (! empty($dolibarr_main_demo))
 	{
 		$tab=explode(',',$dolibarr_main_demo);
 		$demologin=$tab[0];
 		$demopassword=$tab[1];
 	}
 
 	// Entity cookie
 	if (! empty($conf->global->MAIN_MODULE_MULTICOMPANY))
 	{
 		$lastuser = '';
 		$lastentity = $_POST['entity'];
 
 		if (! empty($conf->global->MAIN_MULTICOMPANY_COOKIE))
 		{
 			$prefix=dol_getprefix();
 			$entityCookieName = 'DOLENTITYID_'.$prefix;
 			if (isset($_COOKIE[$entityCookieName]))
 			{
 				include_once(DOL_DOCUMENT_ROOT . "/core/class/cookie.class.php");
 
 				$cryptkey = (! empty($conf->file->cookie_cryptkey) ? $conf->file->cookie_cryptkey : '' );
 
 				$entityCookie = new DolCookie($cryptkey);
 				$cookieValue = $entityCookie->_getCookie($entityCookieName);
 				list($lastuser, $lastentity) = explode('|', $cookieValue);
 			}
 		}
 	}
 
 	// Login
-	$login = (!empty($lastuser)?$lastuser:(GETPOST("username")?GETPOST("username"):$demologin));
+	$login = (!empty($lastuser)?$lastuser:(GETPOST("username","alpha",2)?GETPOST("username","alpha",2):$demologin));
 	$password = $demopassword;
 
 	// Show logo (search in order: small company logo, large company logo, theme logo, common logo)
 	$width=0;
 	$rowspan=2;
 	$urllogo=DOL_URL_ROOT.'/theme/login_logo.png';
 
 	if (! empty($mysoc->logo_small) && is_readable($conf->mycompany->dir_output.'/logos/thumbs/'.$mysoc->logo_small))
 	{
 		$urllogo=DOL_URL_ROOT.'/viewimage.php?cache=1&amp;modulepart=companylogo&amp;file='.urlencode('thumbs/'.$mysoc->logo_small);
 	}
 	elseif (! empty($mysoc->logo) && is_readable($conf->mycompany->dir_output.'/logos/'.$mysoc->logo))
 	{
 		$urllogo=DOL_URL_ROOT.'/viewimage.php?cache=1&amp;modulepart=companylogo&amp;file='.urlencode($mysoc->logo);
 		$width=128;
 	}
 	elseif (is_readable(DOL_DOCUMENT_ROOT.'/theme/dolibarr_logo.png'))
 	{
 		$urllogo=DOL_URL_ROOT.'/theme/dolibarr_logo.png';
 	}
 
 	// Entity field
 	$select_entity='';
 	if (! empty($conf->global->MAIN_MODULE_MULTICOMPANY) && empty($conf->global->MULTICOMPANY_HIDE_LOGIN_COMBOBOX))
 	{
 		$rowspan++;
 
 		$res=dol_include_once('/multicompany/class/actions_multicompany.class.php');
 		if ($res)
 		{
 			$mc = new ActionsMulticompany($db);
 
 			$select_entity=$mc->select_entities($lastentity, 'tabindex="3"');
 		}
 	}
 
 	// Security graphical code
 	$captcha=0;
 	$captcha_refresh='';
 	if (function_exists("imagecreatefrompng") && ! empty($conf->global->MAIN_SECURITY_ENABLECAPTCHA))
 	{
 		$captcha=1;
 		$captcha_refresh=img_refresh();
 	}
 
 	// Extra link
 	$forgetpasslink=0;
 	$helpcenterlink=0;
 	if (empty($conf->global->MAIN_SECURITY_DISABLEFORGETPASSLINK) || empty($conf->global->MAIN_HELPCENTER_DISABLELINK))
 	{
 		if (empty($conf->global->MAIN_SECURITY_DISABLEFORGETPASSLINK))
 		{
 			$forgetpasslink=1;
 		}
 
 		if (empty($conf->global->MAIN_HELPCENTER_DISABLELINK))
 		{
 			$helpcenterlink=1;
 		}
 	}
 
 	// Home message
 	if (! empty($conf->global->MAIN_HOME))
 	{
 		$i=0;
 		while (preg_match('/__\(([a-zA-Z]+)\)__/i',$conf->global->MAIN_HOME,$reg) && $i < 100)
 		{
 			$conf->global->MAIN_HOME=preg_replace('/__\('.$reg[1].'\)__/i',$langs->trans($reg[1]),$conf->global->MAIN_HOME);
 			$i++;
 		}
 	}
 	$main_home=dol_htmlcleanlastbr($conf->global->MAIN_HOME);
 
 	// Google AD
 	$main_google_ad_client = ((! empty($conf->global->MAIN_GOOGLE_AD_CLIENT) && ! empty($conf->global->MAIN_GOOGLE_AD_SLOT))?1:0);
 
 	$dol_loginmesg = $_SESSION["dol_loginmesg"];
 
 	include($template_dir.'login.tpl.php');	// To use native PHP
 
 	$_SESSION["dol_loginmesg"] = '';
 }
 
 /**
  *  Fonction pour initialiser un salt pour la fonction crypt
  *  @param		$type		2=>renvoi un salt pour cryptage DES
  *							12=>renvoi un salt pour cryptage MD5
  *							non defini=>renvoi un salt pour cryptage par defaut
  *	@return		string		Chaine salt
  */
diff --git a/htdocs/main.inc.php b/htdocs/main.inc.php
index e6796b4..c6ee7bd 100644
--- a/htdocs/main.inc.php
+++ b/htdocs/main.inc.php
@@ -66,19 +66,22 @@ if (function_exists('get_magic_quotes_gpc'))	// magic_quotes_* removed in PHP6
 function test_sql_and_script_inject($val,$get)
 {
 	$sql_inj = 0;
 	// For SQL Injection
 	$sql_inj += preg_match('/delete[\s]+from/i', $val);
 	$sql_inj += preg_match('/create[\s]+table/i', $val);
 	$sql_inj += preg_match('/update.+set.+=/i', $val);
 	$sql_inj += preg_match('/insert[\s]+into/i', $val);
 	$sql_inj += preg_match('/select.+from/i', $val);
 	$sql_inj += preg_match('/union.+select/i', $val);
 	$sql_inj += preg_match('/(\.\.%2f)+/i', $val);
 	// For XSS Injection done by adding javascript with script
 	$sql_inj += preg_match('/<script/i', $val);
+	$sql_inj += preg_match('/img[\s]+src/i', $val);
+	$sql_inj += preg_match('/base[\s]+href/i', $val);
+	$sql_inj += preg_match('/style([\s]+)?=/i', $val);
 	if ($get) $sql_inj += preg_match('/javascript:/i', $val);
 	// For XSS Injection done by adding javascript with onmousemove, etc... (closing a src or href tag with not cleaned param)
 	if ($get) $sql_inj += preg_match('/"/i', $val);	// We refused " in GET parameters value
 	return $sql_inj;
 }
 // Security: Return true if OK, false otherwise
@@ -282,373 +285,373 @@ $login='';
 if (! defined('NOLOGIN'))
 {
 	// $authmode lists the different means of identification to be tested in order of preference.
 	// Example: 'http'
 	// Example: 'dolibarr'
 	// Example: 'ldap'
 	// Example: 'http,forceuser'
 
 	// Authentication mode
 	if (empty($dolibarr_main_authentication)) $dolibarr_main_authentication='http,dolibarr';
 	// Authentication mode: forceuser
 	if ($dolibarr_main_authentication == 'forceuser' && empty($dolibarr_auto_user)) $dolibarr_auto_user='auto';
 
 	// Set authmode
 	$authmode=explode(',',$dolibarr_main_authentication);
 
 	// No authentication mode
 	if (! sizeof($authmode) && empty($conf->login_method_modules))
 	{
 		$langs->load('main');
 		dol_print_error('',$langs->trans("ErrorConfigParameterNotDefined",'dolibarr_main_authentication'));
 		exit;
 	}
 
 	// If requested by the login has already occurred, it is retrieved from the session
 	// Call module if not realized that his request.
 	// At the end of this phase, the variable $login is defined.
 	$resultFetchUser='';
 	$test=true;
 	if (! isset($_SESSION["dol_login"]))
 	{
 		// It is not already authenticated, it requests the login / password
 
 	    // If in demo mode, we check we go to home page through the public/demo/index.php page
 	    if ($dolibarr_main_demo && $_SERVER['PHP_SELF'] == DOL_URL_ROOT.'/index.php')  // We ask index page
         {
             if (! preg_match('/public/',$_SERVER['HTTP_REFERER']))
             {
                 dol_syslog("Call index page from another url than demo page");
                 header("Location: ".DOL_URL_ROOT.'/public/demo/index.php');
                 exit;
             }
         }
 
 		// Verification security graphic code
-		if (isset($_POST["username"]) && ! empty($conf->global->MAIN_SECURITY_ENABLECAPTCHA))
+		if (GETPOST("username","alpha",2) && ! empty($conf->global->MAIN_SECURITY_ENABLECAPTCHA))
 		{
 			require_once DOL_DOCUMENT_ROOT.'/includes/artichow/Artichow.cfg.php';
 			require_once ARTICHOW."/AntiSpam.class.php";
 
 			// It creates an anti-spam object
 			$object = new AntiSpam();
 
 			// Verifie code
 			if (! $object->check('dol_antispam_value',$_POST['code'],true))
 			{
 				dol_syslog('Bad value for code, connexion refused');
 				$langs->load('main');
 				$langs->load('other');
 
-				$user->trigger_mesg='ErrorBadValueForCode - login='.$_POST["username"];
+				$user->trigger_mesg='ErrorBadValueForCode - login='.GETPOST("username","alpha",2);
 				$_SESSION["dol_loginmesg"]=$langs->trans("ErrorBadValueForCode");
 				$test=false;
 
 				// Appel des triggers
 				include_once(DOL_DOCUMENT_ROOT . "/core/class/interfaces.class.php");
 				$interface=new Interfaces($db);
 				$result=$interface->run_triggers('USER_LOGIN_FAILED',$user,$user,$langs,$conf,GETPOST('entity'));
 				if ($result < 0) { $error++; }
 				// Fin appel triggers
 			}
 		}
 
 		// Validation of login with a third party login module method
 		if (is_array($conf->login_method_modules) && !empty($conf->login_method_modules))
 		{
 			include_once(DOL_DOCUMENT_ROOT . "/lib/security.lib.php");
 			$login = getLoginMethod();
 			if ($login)	$test=false;
 		}
 
 		// Validation tests user / password
 		// If ok, the variable will be initialized login
 		// If error, we will put error message in session under the name dol_loginmesg
 		$goontestloop=false;
 		if (isset($_SERVER["REMOTE_USER"]) && in_array('http',$authmode)) $goontestloop=true;
-		if (isset($_POST["username"]) || GETPOST('openid_mode','alpha',1)) $goontestloop=true;
+		if (GETPOST("username","alpha",2) || GETPOST('openid_mode','alpha',1)) $goontestloop=true;
 
 		if ($test && $goontestloop)
 		{
 			foreach($authmode as $mode)
 			{
 				if ($test && $mode && ! $login)
 				{
 					$authfile=DOL_DOCUMENT_ROOT.'/includes/login/functions_'.$mode.'.php';
 					$result=include_once($authfile);
 					if ($result)
 					{
 						// Call function to check user/password
-						$usertotest=$_POST["username"];
+						$usertotest=GETPOST("username","alpha",2);
 						$passwordtotest=$_POST["password"];
 						$entitytotest=$_POST["entity"];
 						$function='check_user_password_'.$mode;
 						$login=$function($usertotest,$passwordtotest,$entitytotest);
 						if ($login)	// Login is successfull
 						{
 							$test=false;
 							$dol_authmode=$mode;	// This properties is defined only when logged to say what mode was successfully used
 							$dol_tz=$_POST["tz"];
 							$dol_dst=$_POST["dst"];
 							$dol_screenwidth=$_POST["screenwidth"];
 							$dol_screenheight=$_POST["screenheight"];
 						}
 					}
 					else
 					{
 						dol_syslog("Authentification ko - failed to load file '".$authfile."'",LOG_ERR);
 						sleep(1);
 						$langs->load('main');
 						$langs->load('other');
 						$_SESSION["dol_loginmesg"]=$langs->trans("ErrorFailedToLoadLoginFileForMode",$mode);
 					}
 				}
 			}
 
 			if (! $login)
 			{
 				dol_syslog('Bad password, connexion refused',LOG_DEBUG);
 				$langs->load('main');
 				$langs->load('other');
 
 				// Bad password. No authmode has found a good password.
-				$user->trigger_mesg=$langs->trans("ErrorBadLoginPassword").' - login='.$_POST["username"];
+				$user->trigger_mesg=$langs->trans("ErrorBadLoginPassword").' - login='.GETPOST("username","alpha",2);
 				$_SESSION["dol_loginmesg"]=$langs->trans("ErrorBadLoginPassword");
 
 				// Appel des triggers
 				include_once(DOL_DOCUMENT_ROOT . "/core/class/interfaces.class.php");
 				$interface=new Interfaces($db);
 				$result=$interface->run_triggers('USER_LOGIN_FAILED',$user,$user,$langs,$conf,$_POST["entity"]);
 				if ($result < 0) { $error++; }
 				// Fin appel triggers
 			}
 		}
 
 		// End test login / passwords
 		if (! $login)
 		{
 			// We show login page
 			include_once(DOL_DOCUMENT_ROOT."/lib/security.lib.php");
 			if (! is_object($langs)) // This can occurs when calling page with NOREQUIRETRAN defined
 			{
                 include_once(DOL_DOCUMENT_ROOT."/core/class/translate.class.php");
 				$langs=new Translate("",$conf);
 			}
 			dol_loginfunction($langs,$conf,$mysoc);
 			exit;
 		}
 
 		$resultFetchUser=$user->fetch('',$login);
 		if ($resultFetchUser <= 0)
 		{
 			dol_syslog('User not found, connexion refused');
 			session_destroy();
 			session_name($sessionname);
 			session_start();
 
 			if ($resultFetchUser == 0)
 			{
 				$langs->load('main');
 				$langs->load('other');
 
 				$user->trigger_mesg='ErrorCantLoadUserFromDolibarrDatabase - login='.$login;
 				$_SESSION["dol_loginmesg"]=$langs->trans("ErrorCantLoadUserFromDolibarrDatabase",$login);
 			}
 			if ($resultFetchUser < 0)
 			{
 				$user->trigger_mesg=$user->error;
 				$_SESSION["dol_loginmesg"]=$user->error;
 			}
 
 			// Call triggers
 			include_once(DOL_DOCUMENT_ROOT . "/core/class/interfaces.class.php");
 			$interface=new Interfaces($db);
 			$result=$interface->run_triggers('USER_LOGIN_FAILED',$user,$user,$langs,$conf,$_POST["entity"]);
 			if ($result < 0) { $error++; }
 			// End call triggers
 
 			header('Location: '.DOL_URL_ROOT.'/index.php');
 			exit;
 		}
 	}
 	else
 	{
 		// We are already into an authenticated session
 		$login=$_SESSION["dol_login"];
 		dol_syslog("This is an already logged session. _SESSION['dol_login']=".$login);
 
 		$resultFetchUser=$user->fetch('',$login);
 		if ($resultFetchUser <= 0)
 		{
 			// Account has been removed after login
 			dol_syslog("Can't load user even if session logged. _SESSION['dol_login']=".$login, LOG_WARNING);
 			session_destroy();
 			session_name($sessionname);
 			session_start();
 
 			if ($resultFetchUser == 0)
 			{
 				$langs->load('main');
 				$langs->load('other');
 
 				$user->trigger_mesg='ErrorCantLoadUserFromDolibarrDatabase - login='.$login;
 				$_SESSION["dol_loginmesg"]=$langs->trans("ErrorCantLoadUserFromDolibarrDatabase",$login);
 			}
 			if ($resultFetchUser < 0)
 			{
 				$user->trigger_mesg=$user->error;
 				$_SESSION["dol_loginmesg"]=$user->error;
 			}
 
 			// Call triggers
 			include_once(DOL_DOCUMENT_ROOT . "/core/class/interfaces.class.php");
 			$interface=new Interfaces($db);
 			$result=$interface->run_triggers('USER_LOGIN_FAILED',$user,$user,$langs,$conf,(isset($_POST["entity"])?$_POST["entity"]:0));
 			if ($result < 0) { $error++; }
 			// End call triggers
 
 			header('Location: '.DOL_URL_ROOT.'/index.php');
 			exit;
 		}
 		else
 		{
 		    if (! empty($conf->MAIN_ACTIVATE_UPDATESESSIONTRIGGER))	// We do not execute such trigger at each page load by default
 		    {
     			// Call triggers
     			include_once(DOL_DOCUMENT_ROOT . "/core/class/interfaces.class.php");
     			$interface=new Interfaces($db);
     			$result=$interface->run_triggers('USER_UPDATE_SESSION',$user,$user,$langs,$conf,$conf->entity);
     			if ($result < 0) { $error++; }
     			// End call triggers
 		    }
 		}
 	}
 
 	// Is it a new session that has started ?
 	// If we are here this means authentication was successfull.
 	if (! isset($_SESSION["dol_login"]))
 	{
 		$error=0;
 
 		// New session for this login
 		$_SESSION["dol_login"]=$user->login;
 		$_SESSION["dol_authmode"]=isset($dol_authmode)?$dol_authmode:'';
 		$_SESSION["dol_tz"]=isset($dol_tz)?$dol_tz:'';
 		$_SESSION["dol_dst"]=isset($dol_dst)?$dol_dst:'';
 		$_SESSION["dol_screenwidth"]=isset($dol_screenwidth)?$dol_screenwidth:'';
 		$_SESSION["dol_screenheight"]=isset($dol_screenheight)?$dol_screenheight:'';
 		$_SESSION["dol_company"]=$conf->global->MAIN_INFO_SOCIETE_NOM;
 		if ($conf->multicompany->enabled) $_SESSION["dol_entity"]=$conf->entity;
 		dol_syslog("This is a new started user session. _SESSION['dol_login']=".$_SESSION["dol_login"].' Session id='.session_id());
 
 		$db->begin();
 
 		$user->update_last_login_date();
 
 		// Call triggers
 		include_once(DOL_DOCUMENT_ROOT . "/core/class/interfaces.class.php");
 		$interface=new Interfaces($db);
 		$result=$interface->run_triggers('USER_LOGIN',$user,$user,$langs,$conf,$_POST["entity"]);
 		if ($result < 0) { $error++; }
 		// End call triggers
 
 		if ($error)
 		{
 			$db->rollback();
 			session_destroy();
 			dol_print_error($db,'Error in some triggers on action USER_LOGIN',LOG_ERR);
 			exit;
 		}
 		else
 		{
 			$db->commit();
 		}
 
 		// Create entity cookie, just used for login page
 		if (!empty($conf->global->MAIN_MODULE_MULTICOMPANY) && !empty($conf->global->MAIN_MULTICOMPANY_COOKIE) && isset($_POST["entity"]))
 		{
 			include_once(DOL_DOCUMENT_ROOT."/core/class/cookie.class.php");
 
 			$entity = $_SESSION["dol_login"].'|'.$_POST["entity"];
 
 			$prefix=dol_getprefix();
 			$entityCookieName = 'DOLENTITYID_'.$prefix;
 			// TTL : is defined in the config page multicompany
 			$ttl = (! empty($conf->global->MAIN_MULTICOMPANY_COOKIE_TTL) ? $conf->global->MAIN_MULTICOMPANY_COOKIE_TTL : time()+60*60*8 );
 			// Cryptkey : will be created randomly in the config page multicompany
 			$cryptkey = (! empty($conf->file->cookie_cryptkey) ? $conf->file->cookie_cryptkey : '' );
 
 			$entityCookie = new DolCookie($cryptkey);
 			$entityCookie->_setCookie($entityCookieName, $entity, $ttl);
 		}
 
 		// Module webcalendar
 		if (! empty($conf->webcalendar->enabled) && $user->webcal_login != "")
 		{
 			$domain='';
 
 			// Creation of a cookie to save login
 			$cookiename='webcalendar_login';
 			if (! isset($_COOKIE[$cookiename]))
 			{
 				setcookie($cookiename, $user->webcal_login, 0, "/", $domain, 0);
 			}
 			// Creation of a cookie to save session
 			$cookiename='webcalendar_session';
 			if (! isset($_COOKIE[$cookiename]))
 			{
 				setcookie($cookiename, 'TODO', 0, "/", $domain, 0);
 			}
 		}
 
 		// Module Phenix
 		if (! empty($conf->phenix->enabled) && $user->phenix_login != "" && $conf->phenix->cookie)
 		{
 			// Creation du cookie permettant la connexion automatique, valide jusqu'a la fermeture du browser
 			if (!isset($_COOKIE[$conf->phenix->cookie]))
 			{
 				setcookie($conf->phenix->cookie, $user->phenix_login.":".$user->phenix_pass_crypted.":1", 0, "/", "", 0);
 			}
 		}
 	}
 
 
 	// If user admin, we force the rights-based modules
 	if ($user->admin)
 	{
 		$user->rights->user->user->lire=1;
 		$user->rights->user->user->creer=1;
 		$user->rights->user->user->password=1;
 		$user->rights->user->user->supprimer=1;
 		$user->rights->user->self->creer=1;
 		$user->rights->user->self->password=1;
 	}
 
 	/*
 	 * Overwrite configs global by peronal configs
 	 */
 	// Set liste_limit
 	if (isset($user->conf->MAIN_SIZE_LISTE_LIMIT))	// Can be 0
 	{
 		$conf->liste_limit = $user->conf->MAIN_SIZE_LISTE_LIMIT;
 	}
 	if (isset($user->conf->PRODUIT_LIMIT_SIZE))		// Can be 0
 	{
 		$conf->product->limit_size = $user->conf->PRODUIT_LIMIT_SIZE;
 	}
 	// Replace conf->css by personalized value
 	if (isset($user->conf->MAIN_THEME) && $user->conf->MAIN_THEME)
 	{
 		$conf->theme=$user->conf->MAIN_THEME;
 		$conf->css  = "/theme/".$conf->theme."/style.css.php";
 	}
 	// Set javascript option
     if (! GETPOST('nojs'))   // If javascript was not disabled on URL
     {
     	if (! empty($user->conf->MAIN_DISABLE_JAVASCRIPT))
     	{
     		$conf->use_javascript_ajax=! $user->conf->MAIN_DISABLE_JAVASCRIPT;
     	}
     }
     else $conf->use_javascript_ajax=0;
 }
 
