   Fix a comment vulnerability allowing scripts to be loaded.
   
   Due to the way that comments were loaded in, it was possible to
   terminate a script and inject a new one while loading the diff viewer.
   This isn't believed to have been a problem in the wild, but is certainly
   an important one to fix.
   
   We now ensure that the text is escaped at the point where it's being fed
   into the JavaScript. It's no longer possible to inject scripts.
   
   Thanks to Damian Johnson for the heads up and for the fix that this
   change is based on.
   
   This will be going into 1.5.7 and 1.6.3 releases.
        for (var i in comments) {
            var comment = comments[i];

            if (comment.localdraft) {
                this._createDraftComment(comment.text);
            } else {
        for (var i in comments) {
            var comment = comments[i];

            if (comment.localdraft) {
                this._createDraftComment(comment.text);
            } else {
from django.template import NodeList, TemplateSyntaxError
from django.template.loader import render_to_string
from django.utils import simplejson
from django.utils.translation import ugettext_lazy as _
from djblets.util.decorators import basictag, blocktag
from djblets.util.misc import get_object_or_none

            comment_dict.setdefault(key, []).append({
                'comment_id': comment.id,
                'text': comment.text,
                'line': comment.first_line,
                'num_lines': comment.num_lines,
                'user': {

            comments.setdefault(position, []).append({
                'id': comment.id,
                'text': comment.text,
                'user': {
                    'username': review.user.username,
                    'name': review.user.get_full_name() or review.user.username,
