commit cd3468bad96c00b5a512f551674f36776129520e
Author: Johannes Berg <johannes@sipsolutions.net>
Date:   Wed Jul 29 22:07:44 2009 +0200

    cfg80211: add two missing NULL pointer checks
    
    These pointers can be NULL, the is_mesh() case isn't
    ever hit in the current kernel, but cmp_ies() can be
    hit under certain conditions.
    
    Signed-off-by: Johannes Berg <johannes@sipsolutions.net>
    Cc: stable@kernel.org [2.6.29, 2.6.30]
    Signed-off-by: John W. Linville <linville@tuxdriver.com>

diff --git a/net/wireless/scan.c b/net/wireless/scan.c
index 9271118..7e595ce 100644
--- a/net/wireless/scan.c
+++ b/net/wireless/scan.c
@@ -113,17 +113,17 @@ static u8 *find_ie(u8 num, u8 *ies, size_t len)
 static int cmp_ies(u8 num, u8 *ies1, size_t len1, u8 *ies2, size_t len2)
 {
 	const u8 *ie1 = find_ie(num, ies1, len1);
 	const u8 *ie2 = find_ie(num, ies2, len2);
 	int r;
 
 	if (!ie1 && !ie2)
 		return 0;
-	if (!ie1)
+	if (!ie1 || !ie2)
 		return -1;
 
 	r = memcmp(ie1 + 2, ie2 + 2, min(ie1[1], ie2[1]));
 	if (r == 0 && ie1[1] != ie2[1])
 		return ie2[1] - ie1[1];
 	return r;
 }
 
@@ -152,33 +152,35 @@ static bool is_bss(struct cfg80211_bss *a,
 static bool is_mesh(struct cfg80211_bss *a,
 		    const u8 *meshid, size_t meshidlen,
 		    const u8 *meshcfg)
 {
 	const u8 *ie;
 
 	if (!is_zero_ether_addr(a->bssid))
 		return false;
 
 	ie = find_ie(WLAN_EID_MESH_ID,
 		     a->information_elements,
 		     a->len_information_elements);
 	if (!ie)
 		return false;
 	if (ie[1] != meshidlen)
 		return false;
 	if (memcmp(ie + 2, meshid, meshidlen))
 		return false;
 
 	ie = find_ie(WLAN_EID_MESH_CONFIG,
 		     a->information_elements,
 		     a->len_information_elements);
+	if (!ie)
+		return false;
 	if (ie[1] != IEEE80211_MESH_CONFIG_LEN)
 		return false;
 
 	/*
 	 * Ignore mesh capability (last two bytes of the IE) when
 	 * comparing since that may differ between stations taking
 	 * part in the same mesh.
 	 */
 	return memcmp(ie + 2, meshcfg, IEEE80211_MESH_CONFIG_LEN - 2) == 0;
 }
 
