   net: 4 bytes kernel memory disclosure in SO_BSDCOMPAT gsopt try #2
   
   In function sock_getsockopt() located in net/core/sock.c, optval v.val
   is not correctly initialized and directly returned in userland in case
   we have SO_BSDCOMPAT option set.
   
   This dummy code should trigger the bug:
   
   int main(void)
   {
   	unsigned char buf[4] = { 0, 0, 0, 0 };
   	int len;
   	int sock;
   	sock = socket(33, 2, 2);
   	getsockopt(sock, 1, SO_BSDCOMPAT, &buf, &len);
   	printf("%x%x%x%x\n", buf[0], buf[1], buf[2], buf[3]);
   	close(sock);
   }
   
   Here is a patch that fix this bug by initalizing v.val just after its
   declaration.
   
   Signed-off-by: Cl√©ment Lecigne <clement.lecigne@netasq.com>
   Signed-off-by: David S. Miller <davem@davemloft.net>
	if (len < 0)
		return -EINVAL;

	switch(optname) {
	case SO_DEBUG:
		v.val = sock_flag(sk, SOCK_DBG);
